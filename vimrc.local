syntax on
filetype plugin on

colorscheme termschool

set tags+=./tags
set nowrap
set nonumber
set textwidth=0
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,iso-2022-jp,cp932,euc-jp,default,latin
set fileformat=unix
set nolist
set rtp+=~/.fzf

imap <C-[> <Esc>
noremap ; :
nnoremap <C-c><C-c> :<C-u>nohlsearch<cr><Esc>

let mapleader = ","
noremap \ ,

augroup vimrcEx
  autocmd BufWritePre * :%s/\s\+$//ge
  autocmd FileType gitcommit setlocal textwidth=0
  autocmd FileType vim setlocal textwidth=0
augroup END

" syntasitic
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"v-", " proprietary attribute \"debounce"]

" fugitive
nnoremap [fugitive] <Nop>
nmap <Leader>g [fugitive]

nnoremap <silent> [fugitive]s  :Gstatus<CR>
nnoremap <silent> [fugitive]ca :Gcommit --ammend<CR>
nnoremap <silent> [fugitive]c  :Gcommit -v -q<CR>
nnoremap <silent> [fugitive]d  :Gdiff<CR>
nnoremap <silent> [fugitive]a  :Gwrite<CR>
nnoremap <silent> [fugitive]r  :Gread<CR>
nnoremap <silent> [fugitive]p  :Gpush<CR>
nnoremap <silent> [fugitive]l  :Glog -- %<CR>

" gitgutter
let g:gitgutter_sign_column_always = 1
let g:gitgutter_max_signs = 500
highlight clear SignColumn

" vim-tags
let g:vim_tags_project_tags_command = "/usr/bin/ctags -f tags -R . 2>/dev/null"

" unite
let g:unite_enable_start_insert = 1
let g:unite_enable_ignore_case = 1
let g:unite_enable_smart_case = 1

" vinarise
let g:vinarise_enable_auto_detect = 1

" The prefix key.
nnoremap [unite] <Nop>
nmap <Leader>f [unite]

" unite.vim keymap
nnoremap [unite]U :<C-u>Unite -no-split<Space>
nnoremap [unite]u :<C-u>Unite<Space>
nnoremap <silent> [unite]f  :<C-u>Unite<Space>buffer<CR>
nnoremap <silent> [unite]b  :<C-u>Unite<Space>bookmark<CR>
nnoremap <silent> [unite]m  :<C-u>Unite<Space>file_mru<CR>
nnoremap <silent> [unite]r  :<C-u>UniteWithBufferDir file<CR>
nnoremap <silent> [unite]ur :UniteResume<CR>

nnoremap <silent> [unite]g  :<C-u>Unite grep:. -buffer-name=search-buffer<CR>
nnoremap <silent> [unite]gg :<C-u>Unite grep:. -buffer-name=search-buffer<CR><C-R><C-W><CR>
nnoremap <silent> [unite]sb :<C-u>UniteResume search-buffer<CR>

if executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '-w --nogroup --nocolor --column'
  let g:unite_source_grep_recursive_opt = ''
endif

" vim-airline
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#branch#enabled = 0

let g:airline_theme = 'luna'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

" powerline symbols
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''

let s:lsep = " %{get(g:, 'airline_left_alt_sep', '')}"
let s:rsep = " %{get(g:, 'airline_right_alt_sep', '')}"
let g:airline_section_b =
      \ "%{airline#extensions#branch#get_head()}"
let g:airline_section = ''
let g:airline_section_x =
      \ "%{strlen(&fileformat)?&fileformat:''}".s:rsep.
      \ "%{strlen(&fenc)?&fenc:&enc}".s:rsep.
      \ "%{strlen(&filetype)?&filetype:'no ft'}"
let g:airline_section_y = '%3p%%'
let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%31:%-2v'

" tag jump
nnoremap <C-k> :vsp<CR> :exe("tjump ".expand('<cword>'))<CR>

" pencil
set background=dark
let g:pencil_higher_contrast_ui = 0
let g:airline_theme = 'pencil'

autocmd BufNewFile,BufRead *.rb   source ~/.vimrc_ruby
autocmd BufNewFile,BufRead *.md   source ~/.vimrc_markdown
autocmd BufNewFile,BufRead *.lisp source ~/.vimrc_lisp
autocmd BufNewFile,BufRead *.php  source ~/.vimrc_php
autocmd BufNewFile,BufRead *.haml.blade set filetype=haml

" indentLine
set list lcs=tab:\|\
let g:indentLine_enabled = 1
