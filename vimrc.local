syntax on
filetype plugin on

colorscheme delek

set tags+=./tags
set nowrap
set nonumber
set textwidth=0
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,iso-2022-jp,cp932,euc-jp,default,latin
set fileformat=unix
set nolist
set tw=0

set rtp+=~/.fzf

imap <C-[> <Esc>
noremap ; :
nnoremap <C-c><C-c> :<C-u>nohlsearch<cr><Esc>

let mapleader = ","
noremap \ ,

autocmd BufWritePre * :%s/\s\+$//ge

" highlight
"" Diff
highlight DiffDelete ctermbg=darkgrey
highlight DiffAdd ctermbg=darkgrey
highlight DiffChange ctermbg=darkgrey
highlight DiffText ctermbg=darkgrey

" gitgutter
let g:gitgutter_sign_column_always = 1
let g:gitgutter_max_signs = 500
highlight clear SignColumn
highlight GitGutterAdd ctermfg=green
highlight GitGutterChange ctermfg=yellow
highlight GitGutterDelete ctermfg=red
highlight GitGutterChangeDelete ctermfg=yellow

" quickrun for rspec
let g:quickrun_config = {}
let g:quickrun_config._ = {'runner' : 'vimproc', "runner/vimproc/updatetime" : 10}
let g:quickrun_config['ruby.rspec'] = {'command': 'rspec', 'exec': 'bundle exec %c', 'cmdopt': '-cfd'}

augroup QRunRSpec
  autocmd!
  autocmd BufWinEnter,BufNewFile *_spec.rb set filetype=ruby.rspec
augroup END

nnoremap [quickrun] <Nop>
nmap <Leader>k [quickrun]
nnoremap <silent> [quickrun]r :call QRunRspecCurrentLine()<CR>

fun! QRunRspecCurrentLine()
  let line = line(".")
  exe ":QuickRun -exec '$HOME/.rbenv/shims/bundle exec %c %s%o' -cmdopt ':" . line . " -cfp --fail-fast'"
endfun

" vim-tags
let g:vim_tags_project_tags_command = "/usr/bin/ctags -f tags -R . 2>/dev/null"
let g:vim_tags_gems_tags_command = "/usr/bin/ctags -f Gemfile.lock.tags -R `bundle show --paths` 2>/dev/null"
set tags+=tags,Gemfile.lock.tags

" unite
" The prefix key.
nnoremap [unite] <Nop>
nmap <Leader>f [unite]

let g:unite_enable_start_insert = 1
let g:unite_enable_ignore_case = 1
let g:unite_enable_smart_case = 1

" vinarise
let g:vinarise_enable_auto_detect = 1

" unite.vim keymap
nnoremap [unite]U  :<C-u>Unite -no-split<Space>
nnoremap [unite]u  :<C-u>Unite<Space>
nnoremap <silent> [unite]f :<C-u>Unite<Space>buffer<CR>
nnoremap <silent> [unite]b :<C-u>Unite<Space>bookmark<CR>
nnoremap <silent> [unite]m :<C-u>Unite<Space>file_mru<CR>
nnoremap <silent> [unite]r :<C-u>UniteWithBufferDir file<CR>
nnoremap <silent> [unite]ur :UniteResume<CR>

nnoremap <silent> [unite]g :<C-u>Unite grep:. -buffer-name=search-buffer<CR>
nnoremap <silent> [unite]gg :<C-u>Unite grep:. -buffer-name=search-buffer<CR><C-R><C-W><CR>
nnoremap <silent> [unite]sb :<C-u>UniteResume search-buffer<CR>

if executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
  let g:unite_source_grep_recursive_opt = ''
endif

" unite-rails
nnoremap [unite]x :<C-u>Unite rails/
nnoremap [unite]xa :<C-u>Unite rails/asset<CR>
nnoremap [unite]xd :<C-u>Unite rails/db<CR>
nnoremap [unite]xj :<C-u>Unite rails/javascript<CR>
nnoremap [unite]xm :<C-u>Unite rails/model<CR>
nnoremap [unite]xs :<C-u>Unite rails/spec<CR>
nnoremap [unite]xc :<C-u>Unite rails/controller<CR>
nnoremap [unite]xv :<C-u>Unite rails/view<CR>

" vim-airline
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#branch#enabled = 0

let g:airline_theme = 'luna'

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
" powerline symbols
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''

let s:lsep = " %{get(g:, 'airline_left_alt_sep', '')}"
let s:rsep = " %{get(g:, 'airline_right_alt_sep', '')}"
let g:airline_section_b =
      \ "%{airline#extensions#branch#get_head()}"
let g:airline_section = ''
let g:airline_section_x =
      \ "%{strlen(&fileformat)?&fileformat:''}".s:rsep.
      \ "%{strlen(&fenc)?&fenc:&enc}".s:rsep.
      \ "%{strlen(&filetype)?&filetype:'no ft'}"
let g:airline_section_y = '%3p%%'
let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%31:%-2v'

" tag jump
nnoremap <C-k> :vsp<CR> :exe("tjump ".expand('<cword>'))<CR>

" platicboy/vim-markdown
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_math = 1

" pencil
set background=dark
let g:pencil_higher_contrast_ui = 0
let g:airline_theme = 'pencil'

" hylang
let g:python3_host_prog = '$HOME/.pyenv/shims/python'
let g:python3_host_skip_check = 1
let g:hy_enable_conceal = 1

" slimv
let g:slimv_leader = "\\"
let g:slimv_lisp = '/usr/bin/sbcl'
let g:slimv_swank_cmd = '! tmux new-window -d -n REPL-SBCL "sbcl --load ~/.vim/bundle/slimv/slime/start-swank.lisp"'
