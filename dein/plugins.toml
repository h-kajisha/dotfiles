[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['/vim-airline-themes']
hook_add = '''
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#whitespace#enabled = 0
  let g:airline#extensions#branch#enabled = 0
  let g:airline_theme = 'luna'

  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_symbols.branch = ''
  let g:airline_symbols.readonly = ''

  let s:lsep = " %{get(g:, 'airline_left_alt_sep', '')}"
  let s:rsep = " %{get(g:, 'airline_right_alt_sep', '')}"
  let g:airline_section_b =
        \ "%{airline#extensions#branch#get_head()}"
  let g:airline_section = ''
  let g:airline_section_x =
        \ "%{strlen(&fileformat)?&fileformat:''}".s:rsep.
        \ "%{strlen(&fenc)?&fenc:&enc}".s:rsep.
        \ "%{strlen(&filetype)?&filetype:'no ft'}"
  let g:airline_section_y = '%3p%%'
  let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%31:%-2v'
  let g:airline_theme = 'kalisi'
'''

[[plugins]]
repo = 'pbrisbin/vim-mkdir'

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_echo_msg_error_str = 'E'
  let g:ale_echo_msg_warning_str = 'W'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 1
  let g:ale_open_list = 0
  let g:ale_keep_list_window_open = 0
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap [fugitive] <Nop>
  nmap <Leader>g [fugitive]

  nnoremap <silent> [fugitive]s  :Gstatus<CR>
  nnoremap <silent> [fugitive]b  :Gblame<CR>
  nnoremap <silent> [fugitive]ca :Gcommit --ammend<CR>
  nnoremap <silent> [fugitive]c  :Gcommit -v -q<CR>
  nnoremap <silent> [fugitive]d  :Gdiff<CR>
  nnoremap <silent> [fugitive]a  :Gwrite<CR>
  nnoremap <silent> [fugitive]r  :Gread<CR>
  nnoremap <silent> [fugitive]p  :Gpush<CR>
  nnoremap <silent> [fugitive]l  :Glog -- %<CR>
'''

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'vim-scripts/tComment'

[[plugins]]
repo = 'junegunn/fzf'
build = '~/.fzf/install --all'
rtp = '~/.fzf'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'dag/vim-fish'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['/deoplete-ruby']
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo =  'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'c0r73x/neotags.nvim'
hook_add = '''
'''

[[plugins]]
repo = 'tpope/vim-bundler'
ft = ['ruby']

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  set list lcs=tab:\|\
  let g:indentLine_enabled = 1
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  let g:gitgutter_max_signs = 500
  highlight clear SignColumn
'''

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'kana/vim-filetype-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['elixir']

[[plugins]]
repo = 'slashmili/alchemist.vim'

[[plugins]]
repo = 'mtscout6/vim-cjsx'
on_ft = ['jsx']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'jparise/vim-graphql'

[[plugins]]
repo = 'tukiyo/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])

  nnoremap [denite] <Nop>
  nmap <Leader>f [denite]
  nnoremap <silent> [denite]g  :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> [denite]gg  :<C-u>DeniteCursorWord grep -mode=normal -buffer-name=search-buffer-denite<CR>

  " Denite grep検索結果を再表示する
  nnoremap <silent> [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  " resumeした検索結果の次の行の結果へ飛ぶ
  nnoremap <silent> [denite]n :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
  " resumeした検索結果の前の行の結果へ飛ぶ
  nnoremap <silent> [denite]p :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>
'''

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'chemzqm/vim-jsx-improve'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent><C-e> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'hashivim/vim-terraform'

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
  let g:neoterm_autoscoll = '1'
  let g:neoterm_size = 16
  let g:neoterm_automap_keys = '<F5>'

  let g:neoterm_repl_ruby = 'pry'

  nnoremap [neoterm] <Nop>
  nmap <Leader>n [neoterm]

  vnoremap [neoterm]e :TREPLSendSelection<CR>
  nnoremap [neoterm]f :TREPLSendFile<CR>
  nnoremap [neoterm]e :TREPLSendLine<CR>
  nnoremap [neoterm]t :Ttoggle<CR>
'''

[[plugins]]
repo = 'janko-m/vim-test'
hook_add = '''
  let test#strategy = 'neoterm'
  let test#ruby#rspec#executable = 'bin/rspec'
  let g:test#preserve_screen = 1

  nnoremap [vim-test] <Nop>
  nmap <Leader>t [vim-test]

  nnoremap <silent> [vim-test]t :TestNearest<CR>
  nnoremap <silent> [vim-test]T :TestFile<CR>
  nnoremap <silent> [vim-test]a :TestSuite<CR>
  nnoremap <silent> [vim-test]l :TestLast<CR>
  nnoremap <silent> [vim-test]g :TestVisit<CR>
'''
