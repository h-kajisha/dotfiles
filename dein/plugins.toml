[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['/vim-airline-themes']
hook_add = '''
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#whitespace#enabled = 0
  let g:airline#extensions#branch#enabled = 0
  let g:airline_theme = 'luna'

  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_symbols.branch = ''
  let g:airline_symbols.readonly = ''

  let s:lsep = " %{get(g:, 'airline_left_alt_sep', '')}"
  let s:rsep = " %{get(g:, 'airline_right_alt_sep', '')}"
  let g:airline_section_b =
        \ "%{airline#extensions#branch#get_head()}"
  let g:airline_section = ''
  let g:airline_section_x =
        \ "%{strlen(&fileformat)?&fileformat:''}".s:rsep.
        \ "%{strlen(&fenc)?&fenc:&enc}".s:rsep.
        \ "%{strlen(&filetype)?&filetype:'no ft'}"
  let g:airline_section_y = '%3p%%'
  let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%31:%-2v'
  let g:airline_theme = 'kalisi'
'''

[[plugins]]
repo = 'pbrisbin/vim-mkdir'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'junegunn/fzf'
build = '~/.fzf/install --all'
rtp = '~/.fzf'
depends = ['junegunn/fzf.vim']

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  let g:fzf_buffers_jump = 1

  nnoremap <silent> <C-p> :Files<CR>

  command! -bang Colors
  \ call fzf#vim#colors({'left': '15%', 'options': '--reverse --margin 30%,0'}, <bang>0)

  command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
'''

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
  let g:ackprg = 'ag --nogroup --nocolor --column'
'''

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'dag/vim-fish'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['/deoplete-ruby']
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo =  'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  set list lcs=tab:\|\
  let g:indentLine_enabled = 1
'''

[[plugins]]
repo = 'tukiyo/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])

  nnoremap [denite] <Nop>
  nmap <Leader>f [denite]
  nnoremap <silent> [denite]g  :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> [denite]gg  :<C-u>DeniteCursorWord grep -mode=normal -buffer-name=search-buffer-denite<CR>

  " Denite grep検索結果を再表示する
  nnoremap <silent> [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  " resumeした検索結果の次の行の結果へ飛ぶ
  nnoremap <silent> [denite]n :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
  " resumeした検索結果の前の行の結果へ飛ぶ
  nnoremap <silent> [denite]p :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>
'''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
  let g:neoterm_autoscoll = '1'
  let g:neoterm_size = 24
  let g:neoterm_automap_keys = '<F5>'

  let g:neoterm_repl_ruby = 'pry'

  tnoremap <silent> <ESC> <C-\><C-n>

  nnoremap [neoterm] <Nop>
  nmap <Leader>n [neoterm]

  vnoremap [neoterm]e :TREPLSendSelection<CR>
  nnoremap [neoterm]f :TREPLSendFile<CR>
  nnoremap [neoterm]e :TREPLSendLine<CR>
  nnoremap [neoterm]t :Ttoggle<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
