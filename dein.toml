[[plugins]]
repo = 'christoomey/vim-run-interactive'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'janko-m/vim-test'
hook_post_source = '''
  nnoremap <silent> <Leader>t :TestFile<CR>
  nnoremap <silent> <Leader>s :TestNearest<CR>
  nnoremap <silent> <Leader>l :TestLast<CR>
  nnoremap <silent> <Leader>a :TestSuite<CR>
  nnoremap <silent> <leader>gt :TestVisit<CR>
'''

[[plugins]]
repo = 'kchmck/vim-coffee-script'

[[plugins]]
repo = 'pbrisbin/vim-mkdir'

[[plugins]]
repo = 'scrooloose/syntastic'
hook_post_source = '''
  " configure syntastic syntax checking to check on open as well as save
  let g:syntastic_check_on_open=1
  let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-", " proprietray attribute \"v-", " proprietary attribute \"debounce"]
  let g:syntastic_eruby_ruby_quiet_messages =
      \ {"regex": "possibly useless use of a variable in void context"}
'''

[[plugins]]
repo = 'slim-template/vim-slim'

[[plugins]]
repo = 'tpope/vim-bundler'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-eunuch'

[[plugins]]
repo = 'tpope/vim-fugitive'
depends = ['idanarye/vim-merginal']
hook_post_source = '''
  nnoremap [fugitive] <Nop>
  nmap <Leader>g [fugitive]

  nnoremap <silent> [fugitive]s  :Gstatus<CR>
  nnoremap <silent> [fugitive]ca :Gcommit --ammend<CR>
  nnoremap <silent> [fugitive]c  :Gcommit -v -q<CR>
  nnoremap <silent> [fugitive]d  :Gdiff<CR>
  nnoremap <silent> [fugitive]a  :Gwrite<CR>
  nnoremap <silent> [fugitive]r  :Gread<CR>
  nnoremap <silent> [fugitive]p  :Gpush<CR>
  nnoremap <silent> [fugitive]l  :Glog -- %<CR>
'''

[[plugins]]
repo = 'tpope/vim-projectionist'

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'tpope/vim-rake'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-rhubarb'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'vim-scripts/tComment'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['/vim-airline-themes']
hook_post_source = '''
  let g:airline#extensions#whitespace#enabled = 0
  let g:airline#extensions#branch#enabled = 0

  let g:airline_theme = 'luna'

  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_symbols.branch = ''
  let g:airline_symbols.readonly = ''

  let s:lsep = " %{get(g:, 'airline_left_alt_sep', '')}"
  let s:rsep = " %{get(g:, 'airline_right_alt_sep', '')}"
  let g:airline_section_b =
        \ "%{airline#extensions#branch#get_head()}"
  let g:airline_section = ''
  let g:airline_section_x =
        \ "%{strlen(&fileformat)?&fileformat:''}".s:rsep.
        \ "%{strlen(&fenc)?&fenc:&enc}".s:rsep.
        \ "%{strlen(&filetype)?&filetype:'no ft'}"
  let g:airline_section_y = '%3p%%'
  let g:airline_section_z = get(g:, 'airline_linecolumn_prefix', '').'%31:%-2v'
'''

[[plugins]]
repo = 'bogado/file-line'

[[plugins]]
repo = 'junegunn/fzf'
build = '~/.fzf/install --all'
rtp = ''
hook_post_source = '''
  set rtp+=~/.fzf
'''

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']

[[plugins]]
repo = 'reedes/vim-colors-pencil'
hook_post_source = '''
  set background=dark
  let g:pencil_higher_contrast_ui = 0
  let g:airline_theme = 'pencil'
'''

[[plugins]]
repo = 's3rvac/AutoFenc'

#[[plugins]]
#repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['kmnk/vim-unite-giti', 'basyura/unite-rails']
hook_post_source = '''
  let g:unite_enable_start_insert = 1
  let g:unite_enable_ignore_case = 1
  let g:unite_enable_smart_case = 1

  nnoremap [unite] <Nop>
  nmap <Leader>f [unite]

  nnoremap [unite]U :<C-u>Unite -no-split<Space>
  nnoremap [unite]u :<C-u>Unite<Space>
  nnoremap <silent> [unite]f  :<C-u>Unite<Space>buffer<CR>
  nnoremap <silent> [unite]b  :<C-u>Unite<Space>bookmark<CR>
  nnoremap <silent> [unite]m  :<C-u>Unite<Space>file_mru<CR>
  nnoremap <silent> [unite]r  :<C-u>UniteWithBufferDir file<CR>
  nnoremap <silent> [unite]ur :UniteResume<CR>

  nnoremap <silent> [unite]g  :<C-u>Unite grep:. -buffer-name=search-buffer<CR>
  nnoremap <silent> [unite]gg :<C-u>Unite grep:. -buffer-name=search-buffer<CR><C-R><C-W><CR>
  nnoremap <silent> [unite]sb :<C-u>UniteResume search-buffer<CR>

  if executable('ag')
    let g:unite_source_grep_command = 'ag'
    let g:unite_source_grep_default_opts = '-w --nogroup --nocolor --column'
    let g:unite_source_grep_recursive_opt = ''
  endif
'''

[[plugins]]
repo =  'Shougo/vimproc'

[[plugins]]
repo = 'szw/vim-tags'
hook_post_source = '''
  let g:vim_tags_project_tags_command = "/usr/bin/ctags -f tags -R . 2>/dev/null"
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_post_source = '''
  set list lcs=tab:\|\
  let g:indentLine_enabled = 1
'''

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'vim-scripts/twilight'

[[plugins]]
repo = 'easysid/mod8.vim'

[[plugins]]
repo = 'the31k/vim-colors-tayra'

[[plugins]]
repo = 'mhartington/oceanic-next'

[[plugins]]
repo = 'marcopaganini/termschool-vim-theme'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_post_source = '''
  let g:gitgutter_sign_column_always = 1
  let g:gitgutter_max_signs = 500
  highlight clear SignColumn
'''

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'kmnk/vim-unite-giti'

[[plugins]]
repo = 'rhysd/committia.vim'

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'kana/vim-filetype-haskell'
on_ft = ['haskell']

[[plugins]]
repo = 'lambdatoast/elm.vim'
on_ft = ['elm']

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['elixir']

[[plugins]]
repo = 'hylang/vim-hy'
on_ft = ['hy']

[[plugins]]
repo = 'kovisoft/slimv'
on_ft = ['lisp']

[[plugins]]
repo = 'mtscout6/vim-cjsx'
on_ft = ['jsx']

[[plugins]]
repo = 'stephpy/vim-php-cs-fixer'
on_ft = ['php']

[[plugins]]
repo = 'vim-php/vim-composer'
on_ft = ['php']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'freeo/vim-kalisi'
